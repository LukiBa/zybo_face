  Unloading gcc/7.3
  Unloading python/3.7.4
  Unloading cuda/10.1.168
  Loading gcc/7.3 from: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0/
  Loading python/3.7.4 from: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3
  Loading cuda/10.1.168 from: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168/
==============================================
Intuitus: YoloV3 tiny face
==============================================
Start training of LB_pt_yolov3-tiny-face-384x384 on VSC



model used LB_pt_yolov3-tiny-face-384x384
exports weights to ./weights
2021-12-07 20:46:51.994532: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 20:46:51.996353: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 20:46:51.996392: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
Namespace(FPGA=False, KDstr=5, a_bit=8, adam=False, batch_size=16, buckcet='', cache_images=False, cfg='/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/cfg/yolov3tiny-face/yolov3-tiny.cfg', data='/home/lv71513/lbaischer/intuitus/data/vggface.data', device='', ema=False, epochs=30, evolve=False, img_size=[384, 384], load_model=None, load_teacher_model=None, local_rank=-1, mpt=False, multi_scale=False, name='', nosave=False, notest=False, prune=-1, pt=False, quantized=0, rank=0, rect=False, resume=False, s=0.001, single_cls=False, t_cfg=None, t_weights=None, test_img_outpath=None, w_bit=6, wdir='/home/lv71513/lbaischer/intuitus/weights_face3', weights='None')
Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1080', total_memory=8119MB)

Start Tensorboard with "tensorboard --logdir=runs", view at http://localhost:6006/
Model Summary: 37 layers, 8.67912e+06 parameters, 8.67912e+06 gradients
Optimizer groups: 13 .bias, 13 Conv2d.weight, 11 other
Caching labels: 0it [00:00, ?it/s]Caching labels: 4122it [00:00, 41216.40it/s]Caching labels: 7471it [00:00, 41100.19it/s]
Caching labels: 0it [00:00, ?it/s]Caching labels: 600it [00:00, 37874.67it/s]single-gpu sparse
Image sizes 384 - 384 train, 384 test
Using 8 dataloader workers
Starting training for 30 epochs...
Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
Epoch: 0

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:15,  2.41it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   5%|▌         | 2/38 [00:00<00:11,  3.12it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:08,  4.18it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  11%|█         | 4/38 [00:00<00:07,  4.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:01<00:06,  4.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  16%|█▌        | 6/38 [00:01<00:06,  5.20it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:01<00:05,  5.95it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:01<00:03,  7.45it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:03,  8.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:02<00:02,  9.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:02<00:02, 10.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:02<00:01, 10.58it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:02<00:01, 10.98it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:02<00:01, 10.58it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:02<00:01, 10.92it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:03<00:01, 11.21it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:03<00:00, 11.27it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:03<00:00, 11.37it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:03<00:00, 11.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:03<00:00, 11.81it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:03<00:00, 11.89it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:04<00:00, 12.01it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:04<00:00,  9.17it/s]                 all       600       654     0.361     0.541     0.402     0.433
Epoch: 1

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.88it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.52it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.31it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.11it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.30it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.43it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.50it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.55it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.57it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.59it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.64it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.64it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.89it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.28it/s]                 all       600       654     0.645     0.816     0.796     0.721
Epoch: 2

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:08,  4.35it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  8.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03,  9.56it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:03, 10.32it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 10.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.22it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 11.67it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.06it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.25it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.35it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:02<00:01, 12.46it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.53it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.57it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.60it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.86it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 11.92it/s]                 all       600       654     0.861     0.908     0.935     0.884
Epoch: 3

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  5.10it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.72it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.46it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.90it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.22it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.36it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.48it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.80it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.03it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.41it/s]                 all       600       654     0.865     0.924     0.962     0.894
Epoch: 4

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  5.23it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.97it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.33it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.76it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.20it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:01, 12.51it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.91it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.98it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 13.03it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:00, 13.07it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 13.06it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 13.08it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 13.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 13.11it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 13.12it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:02<00:00, 13.26it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.50it/s]                 all       600       654     0.953     0.939     0.981     0.946
Epoch: 5

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.86it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  8.64it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.39it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.30it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.83it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.37it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.51it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.58it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.72it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.76it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.03it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.36it/s]                 all       600       654     0.945     0.972      0.99     0.958
Epoch: 6

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  5.28it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.26it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.47it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.91it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.21it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.40it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.49it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.60it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.64it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.69it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.73it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.72it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.03it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.35it/s]                 all       600       654     0.936      0.97     0.991     0.953
Epoch: 7

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:09,  3.93it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  7.91it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03,  9.81it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 10.85it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.49it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.94it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.23it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.43it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.53it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.69it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.80it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.82it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.02it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.09it/s]                 all       600       654     0.932      0.98     0.992     0.955
Epoch: 8

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:09,  3.98it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  8.01it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03,  9.90it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 10.95it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.94it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.17it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.37it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.47it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.56it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.59it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.00it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.11it/s]                 all       600       654     0.949     0.976     0.992     0.962
Epoch: 9

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.87it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.98it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.62it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.44it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.89it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.37it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.51it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.56it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.64it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.67it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.76it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.81it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.82it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.05it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.39it/s]                 all       600       654     0.945     0.988     0.993     0.966
Epoch: 10

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.84it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.95it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.60it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.45it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.91it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.22it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.43it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.56it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.55it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.64it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.62it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.67it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.73it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.82it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.92it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.99it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.39it/s]                 all       600       654     0.974     0.986     0.994      0.98
Epoch: 11

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.86it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.94it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.33it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.17it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.37it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.46it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.63it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.72it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.73it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.96it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.34it/s]                 all       600       654     0.964     0.986     0.994     0.975
Epoch: 12

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:08,  4.28it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  7.97it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03,  9.51it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 10.51it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.00it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.47it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 11.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 11.90it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 11.91it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 11.97it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.00it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:02<00:01, 12.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.11it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.18it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.25it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.31it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.37it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:03<00:00, 12.34it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 11.69it/s]                 all       600       654      0.97     0.983     0.994     0.976
Epoch: 13

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:09,  3.83it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  7.92it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03,  9.99it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.12it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.84it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 12.31it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:01, 12.63it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:02, 10.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 11.43it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 11.92it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.27it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:02<00:01, 12.56it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.90it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.97it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 13.07it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 13.12it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 13.18it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.30it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.05it/s]                 all       600       654     0.976     0.982     0.994     0.979
Epoch: 14

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.97it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.07it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.43it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.84it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.35it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.46it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.57it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.60it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.72it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.76it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.96it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.28it/s]                 all       600       654     0.982      0.98     0.994     0.981
Epoch: 15

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  5.20it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.04it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.33it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.17it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.48it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.82it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.88it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.86it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.94it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 13.00it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 13.06it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 13.08it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 13.11it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 13.12it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 13.13it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:02<00:00, 13.27it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.50it/s]                 all       600       654     0.979     0.985     0.994     0.982
Epoch: 16

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  5.14it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.20it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.96it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.26it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.45it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.55it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.62it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.76it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.81it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:02<00:00, 13.02it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.44it/s]                 all       600       654     0.977     0.986     0.994     0.981
Epoch: 17

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  5.29it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.32it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.84it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.56it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 12.03it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.32it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.50it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.64it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:00, 13.10it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:01, 10.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 11.17it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 11.39it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 11.67it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 11.86it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.33it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 11.93it/s]                 all       600       654     0.994     0.981     0.994     0.987
Epoch: 18

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:06,  5.47it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.28it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.57it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.18it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.47it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.69it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 11.85it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 11.93it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 11.98it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.06it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.07it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.14it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.19it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.23it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.16it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.53it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 11.88it/s]                 all       600       654     0.979     0.985     0.994     0.982
Epoch: 19

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.72it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.82it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.44it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.30it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.84it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.18it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.40it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.55it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.81it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.84it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.84it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.86it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.04it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.39it/s]                 all       600       654     0.979     0.983     0.994     0.981
Epoch: 20

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:08,  4.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  8.51it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.25it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.12it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 12.04it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.29it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.49it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.59it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.63it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.73it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.73it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.72it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.99it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.28it/s]                 all       600       654     0.981     0.988     0.994     0.984
Epoch: 21

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:08,  4.50it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  8.11it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03,  9.45it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:03, 10.06it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 10.53it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.05it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 11.33it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 11.63it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 11.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 11.88it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.02it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:02<00:01, 12.14it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.24it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.19it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.22it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.19it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:03<00:00, 12.21it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.60it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 11.58it/s]                 all       600       654     0.979     0.985     0.994     0.982
Epoch: 22

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  5.06it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.95it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.50it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.23it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.95it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.12it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.31it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.31it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.44it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.49it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.58it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.63it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.64it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.68it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.67it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.90it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.25it/s]                 all       600       654     0.973     0.991     0.994     0.982
Epoch: 23

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.98it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.81it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.22it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 10.96it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.38it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.59it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 11.83it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 11.89it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 11.87it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 11.96it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.06it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:02<00:01, 12.07it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.18it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.17it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.13it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:03<00:00, 12.16it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 11.79it/s]                 all       600       654     0.978     0.989     0.993     0.984
Epoch: 24

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:08,  4.17it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  7.93it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03,  9.49it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:03, 10.30it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 10.76it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.32it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 11.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.11it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.28it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.46it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.58it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:02<00:01, 12.69it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.72it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.73it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.81it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.05it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.02it/s]                 all       600       654     0.981     0.986     0.993     0.984
Epoch: 25

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:09,  3.94it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  7.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03,  9.59it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 10.44it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 10.86it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 11.34it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 11.77it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.05it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.24it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.36it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.47it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:02<00:01, 12.55it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.60it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.63it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.67it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.69it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.73it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.96it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 11.96it/s]                 all       600       654     0.981     0.988     0.994     0.984
Epoch: 26

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:08,  4.40it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:04,  8.52it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.30it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.23it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.69it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:01<00:02, 12.01it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.29it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.45it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.52it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.62it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.67it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.76it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.78it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 13.03it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.24it/s]                 all       600       654     0.982     0.986     0.994     0.984
Epoch: 27

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:06,  5.82it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.56it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.34it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.66it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 11.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 11.90it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.02it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.02it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.07it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.11it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.21it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.29it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.32it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.31it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.29it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 11.98it/s]                 all       600       654      0.98     0.987     0.994     0.984
Epoch: 28

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  5.15it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  9.21it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.69it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.43it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.94it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.20it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.40it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.51it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.54it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.61it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.63it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.65it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.71it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.73it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.75it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.74it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.55it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:03<00:00, 12.82it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.29it/s]                 all       600       654     0.982     0.989     0.994     0.985
Epoch: 29

               Class    Images   Targets         P         R   mAP@0.5        F1:   0%|          | 0/38 [00:00<?, ?it/s]Darknet(
  (module_list): ModuleList(
    (0): Sequential(
      (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (2): Sequential(
      (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Sequential(
      (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (10): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (11): Sequential(
      (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
      (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
    (12): Sequential(
      (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (13): Sequential(
      (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (14): Sequential(
      (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (15): Sequential(
      (Conv2d): Conv2d(512, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (16): YOLOLayer()
    (17): FeatureConcat()
    (18): Sequential(
      (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (19): Upsample(scale_factor=2.0, mode=nearest)
    (20): FeatureConcat()
    (21): Sequential(
      (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (BatchNorm2d): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.1, inplace=True)
    )
    (22): Sequential(
      (Conv2d): Conv2d(256, 30, kernel_size=(1, 1), stride=(1, 1))
    )
    (23): YOLOLayer()
  )
)
               Class    Images   Targets         P         R   mAP@0.5        F1:   3%|▎         | 1/38 [00:00<00:07,  4.83it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:   8%|▊         | 3/38 [00:00<00:03,  8.96it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  13%|█▎        | 5/38 [00:00<00:03, 10.62it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  18%|█▊        | 7/38 [00:00<00:02, 11.45it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  24%|██▎       | 9/38 [00:00<00:02, 11.95it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  29%|██▉       | 11/38 [00:00<00:02, 12.24it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  34%|███▍      | 13/38 [00:01<00:02, 12.47it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  39%|███▉      | 15/38 [00:01<00:01, 12.57it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  45%|████▍     | 17/38 [00:01<00:01, 12.62it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  50%|█████     | 19/38 [00:01<00:01, 12.70it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  55%|█████▌    | 21/38 [00:01<00:01, 12.76it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  61%|██████    | 23/38 [00:01<00:01, 12.79it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  66%|██████▌   | 25/38 [00:02<00:01, 12.84it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  71%|███████   | 27/38 [00:02<00:00, 12.83it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  76%|███████▋  | 29/38 [00:02<00:00, 12.87it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  82%|████████▏ | 31/38 [00:02<00:00, 12.88it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  87%|████████▋ | 33/38 [00:02<00:00, 12.88it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  92%|█████████▏| 35/38 [00:02<00:00, 12.90it/s]               Class    Images   Targets         P         R   mAP@0.5        F1:  97%|█████████▋| 37/38 [00:02<00:00, 13.09it/s]               Class    Images   Targets         P         R   mAP@0.5        F1: 100%|██████████| 38/38 [00:03<00:00, 12.45it/s]
                 all       600       654     0.979     0.987     0.994     0.983
Stop Training of LB_pt_yolov3-tiny-face-384x384 on VSC
======================================================
Training, evaluation and export of the model completed
======================================================
==============================================
Intuitus: YoloV3 tiny face leaky to relu
==============================================
Start training of LB_pt_yolov3-tiny-face-384x384 on VSC



model used LB_pt_yolov3-tiny-face-384x384
exports weights to ./weights
2021-12-07 21:10:56.531492: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:10:56.531758: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:10:56.531775: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
Namespace(FPGA=False, KDstr=5, a_bit=8, adam=False, batch_size=16, buckcet='', cache_images=False, cfg='/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/cfg/yolov3tiny-face/yolov3-tiny-relu.cfg', data='/home/lv71513/lbaischer/intuitus/data/vggface.data', device='', ema=False, epochs=37, evolve=False, img_size=[384, 384], load_model=None, load_teacher_model=None, local_rank=-1, mpt=False, multi_scale=False, name='', nosave=False, notest=False, prune=-1, pt=False, quantized=0, rank=0, rect=False, resume=False, s=0.001, single_cls=False, t_cfg=None, t_weights=None, test_img_outpath=None, w_bit=6, wdir='/home/lv71513/lbaischer/intuitus/weights_face3', weights='last.pt')
Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1080', total_memory=8119MB)

Start Tensorboard with "tensorboard --logdir=runs", view at http://localhost:6006/
Traceback (most recent call last):
  File "/home/lv71513/lbaischer/Intuitus-converter/train_torch_yolo.py", line 678, in <module>
    train(hyp,opt)  # train normally
  File "/home/lv71513/lbaischer/Intuitus-converter/train_torch_yolo.py", line 169, in train
    FPGA=opt.FPGA, steps=steps).to(device)
  File "/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/models.py", line 490, in __init__
    self.module_defs = parse_model_cfg(cfg)
  File "/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/utils/parse_config.py", line 25, in parse_model_cfg
    key, val = line.split("=")
ValueError: too many values to unpack (expected 2)
Stop Training of LB_pt_yolov3-tiny-face-384x384 on VSC
cp: cannot stat ‘/home/lv71513/lbaischer/intuitus/weights_face3/best.pt’: No such file or directory
rm: cannot remove ‘/home/lv71513/lbaischer/intuitus/weights_face3/best.pt’: No such file or directory
======================================================
======================================================
Training, evaluation and export of the model completed
======================================================
==============================================
Intuitus: YoloV3 tiny face fuse batchnorm
==============================================
Start training of LB_pt_yolov3-tiny-face-384x384 on VSC



model used LB_pt_yolov3-tiny-face-384x384
exports weights to ./weights
2021-12-07 21:11:00.852417: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:00.852701: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:00.852717: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
Namespace(FPGA=False, KDstr=5, a_bit=8, adam=False, batch_size=16, buckcet='', cache_images=False, cfg='/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/cfg/yolov3tiny-face/yolov3-tiny-relu.cfg', data='/home/lv71513/lbaischer/intuitus/data/vggface.data', device='', ema=False, epochs=40, evolve=False, img_size=[384, 384], load_model=None, load_teacher_model=None, local_rank=-1, mpt=False, multi_scale=False, name='', nosave=False, notest=False, prune=-1, pt=False, quantized=-1, rank=0, rect=False, resume=False, s=0.001, single_cls=False, t_cfg=None, t_weights=None, test_img_outpath=None, w_bit=6, wdir='/home/lv71513/lbaischer/intuitus/weights_face3', weights='last.pt')
Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1080', total_memory=8119MB)

Start Tensorboard with "tensorboard --logdir=runs", view at http://localhost:6006/
Traceback (most recent call last):
  File "/home/lv71513/lbaischer/Intuitus-converter/train_torch_yolo.py", line 678, in <module>
    train(hyp,opt)  # train normally
  File "/home/lv71513/lbaischer/Intuitus-converter/train_torch_yolo.py", line 169, in train
    FPGA=opt.FPGA, steps=steps).to(device)
  File "/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/models.py", line 490, in __init__
    self.module_defs = parse_model_cfg(cfg)
  File "/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/utils/parse_config.py", line 25, in parse_model_cfg
    key, val = line.split("=")
ValueError: too many values to unpack (expected 2)
Stop Training of LB_pt_yolov3-tiny-face-384x384 on VSC
cp: cannot stat ‘/home/lv71513/lbaischer/intuitus/weights_face3/best.pt’: No such file or directory
rm: cannot remove ‘/home/lv71513/lbaischer/intuitus/weights_face3/best.pt’: No such file or directory
======================================================
Training, evaluation and export of the model completed
======================================================
==============================================
Intuitus: YoloV3 tiny face quantize
==============================================
Start training of LB_pt_yolov3-tiny-face-384x384 on VSC



model used LB_pt_yolov3-tiny-face-384x384
exports weights to ./weights
2021-12-07 21:11:05.032207: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:05.032596: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:05.032635: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
Namespace(FPGA=False, KDstr=5, a_bit=8, adam=False, batch_size=16, buckcet='', cache_images=False, cfg='/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/cfg/yolov3tiny-face/yolov3-tiny-fused.cfg', data='/home/lv71513/lbaischer/intuitus/data/vggface.data', device='', ema=False, epochs=60, evolve=False, img_size=[384, 384], load_model=None, load_teacher_model=None, local_rank=-1, mpt=False, multi_scale=False, name='', nosave=False, notest=False, prune=-1, pt=False, quantized=2, rank=0, rect=False, resume=False, s=0.001, single_cls=False, t_cfg=None, t_weights=None, test_img_outpath=None, w_bit=6, wdir='/home/lv71513/lbaischer/intuitus/weights_face3', weights='fuse_last.pt')
Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1080', total_memory=8119MB)

Start Tensorboard with "tensorboard --logdir=runs", view at http://localhost:6006/
Model Summary: 26 layers, 8.67593e+06 parameters, 8.67593e+06 gradients
Optimizer groups: 13 .bias, 13 Conv2d.weight, 0 other
Traceback (most recent call last):
  File "/home/lv71513/lbaischer/Intuitus-converter/train_torch_yolo.py", line 227, in train
    chkpt['model'] = {k: v for k, v in weight_dict.items() if model.state_dict()[k].numel() == v.numel()}
  File "/home/lv71513/lbaischer/Intuitus-converter/train_torch_yolo.py", line 227, in <dictcomp>
    chkpt['model'] = {k: v for k, v in weight_dict.items() if model.state_dict()[k].numel() == v.numel()}
KeyError: 'module_list.0.BatchNorm2d.weight'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lv71513/lbaischer/Intuitus-converter/train_torch_yolo.py", line 678, in <module>
    train(hyp,opt)  # train normally
  File "/home/lv71513/lbaischer/Intuitus-converter/train_torch_yolo.py", line 233, in train
    raise KeyError(s) from e
KeyError: "fuse_last.pt is not compatible with /home/lv71513/lbaischer/Intuitus-converter/torch_yolo/cfg/yolov3tiny-face/yolov3-tiny-fused.cfg. Specify --weights '' or specify a --cfg compatible with fuse_last.pt. See https://github.com/ultralytics/yolov3/issues/657"
Stop Training of LB_pt_yolov3-tiny-face-384x384 on VSC
cp: cannot stat ‘/home/lv71513/lbaischer/intuitus/weights_face3/best.pt’: No such file or directory
rm: cannot remove ‘/home/lv71513/lbaischer/intuitus/weights_face3/best.pt’: No such file or directory
======================================================
Training, evaluation and export of the model completed
======================================================
2021-12-07 21:11:10.973526: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:10.973799: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:10.973813: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
Namespace(a_bits=8, accum_bits=15, b_bits=6, cfg='/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/cfg/yolov3tiny-face/yolov3-tiny-fused.cfg', img_size=384, out_weights='/home/lv71513/lbaischer/intuitus/weights_face3/post_scale.pt', param_outpath='/home/lv71513/lbaischer/intuitus/parameters/int8_6', quantized=2, w_bits=6, weights='/home/lv71513/lbaischer/intuitus/weights_face3/quant_best.pt')
Using CPU

Model Summary: 26 layers, 8.67593e+06 parameters, 8.67593e+06 gradients
Model Summary: 26 layers, 8.67593e+06 parameters, 8.67593e+06 gradients
Traceback (most recent call last):
  File "/home/lv71513/lbaischer/Intuitus-converter/torch_convert_postscale.py", line 170, in <module>
    convert(opt)
  File "/home/lv71513/lbaischer/Intuitus-converter/torch_convert_postscale.py", line 83, in convert
    chkpt = torch.load(weights, map_location=device)
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 581, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 230, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 211, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: '/home/lv71513/lbaischer/intuitus/weights_face3/quant_best.pt'
2021-12-07 21:11:15.354186: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:15.354620: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:15.354648: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
Namespace(FPGA=True, a_bit=8, augment=False, batch_size=16, cfg='/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/cfg/yolov3tiny-face/yolov3-tiny-fused.cfg', conf_thres=0.001, data='/home/lv71513/lbaischer/intuitus/data/vggface.data', device='', img_outpath=None, img_size=384, iou_thres=0.6, load_model=None, model=None, quantized=3, save_json=False, single_cls=False, task='test', w_bit=6, wdir='/home/lv71513/lbaischer/intuitus/weights_face3', weights='post_scale.pt')
Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1080', total_memory=8119MB)

Model Summary: 26 layers, 8.67593e+06 parameters, 8.67593e+06 gradients
Traceback (most recent call last):
  File "/home/lv71513/lbaischer/Intuitus-converter/test_torch_yolo.py", line 363, in <module>
    load_model = opt.load_model)
  File "/home/lv71513/lbaischer/Intuitus-converter/test_torch_yolo.py", line 88, in test
    chkpt = torch.load(weights, map_location=device)
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 581, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 230, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 211, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: '/home/lv71513/lbaischer/intuitus/weights_face3/post_scale.pt'
2021-12-07 21:11:20.085956: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:20.086247: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//extras/CUPTI/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib64:/opt/sw/x86_64/generic/nvidia-kernel-modules/3.10.0-957.10.1.el7.x86_64/460.32.03-datacenter/gpu_gtx1080single/usr/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/cuda/10.1.168//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/python/3.7.4/gcc/7.3/lib:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib64:/opt/sw/x86_64/glibc-2.17/ivybridge-ep/gcc/7.3.0//lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib:/opt/sw/x86_64/generic/rdma-core/rdma-core-34.1/build/lib::/cm/shared/apps/slurm/current/lib:/cm/shared/apps/slurm/current/lib/slurm
2021-12-07 21:11:20.086264: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
Namespace(FPGA=True, a_bit=8, augment=False, batch_size=16, cfg='/home/lv71513/lbaischer/Intuitus-converter/torch_yolo/cfg/yolov3tiny-face/yolov3-tiny-fused.cfg', conf_thres=0.001, data='/home/lv71513/lbaischer/intuitus/data/vggface.data', device='', img_outpath=None, img_size=384, iou_thres=0.6, load_model=None, model=None, quantized=3, save_json=False, single_cls=False, task='test', w_bit=6, wdir='/home/lv71513/lbaischer/intuitus/weights_face3', weights='post_scale.pt')
Using CUDA device0 _CudaDeviceProperties(name='GeForce GTX 1080', total_memory=8119MB)

Model Summary: 26 layers, 8.67593e+06 parameters, 8.67593e+06 gradients
Traceback (most recent call last):
  File "/home/lv71513/lbaischer/Intuitus-converter/test_torch_yolo.py", line 363, in <module>
    load_model = opt.load_model)
  File "/home/lv71513/lbaischer/Intuitus-converter/test_torch_yolo.py", line 88, in test
    chkpt = torch.load(weights, map_location=device)
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 581, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 230, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/home/lv71513/lbaischer/nn/lib/python3.7/site-packages/torch/serialization.py", line 211, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: '/home/lv71513/lbaischer/intuitus/weights_face3/post_scale.pt'
